# =============================================================================================== #
#                                                                                                 #
#  __      __.__  __  .__         .___              ___ ___              ___________              #
# /  \    /  \__|/  |_|  |__    __| _/______  _  __/   |   \ __ _______  \_   _____/ _______  __  #
# \   \/\/   /  \   __\  |  \  / __ |/ __ \ \/ \/ /    ~    \  |  \__  \  |    __)_ /    \  \/ /  #
#  \        /|  ||  | |   Y  \/ /_/ \  ___/\     /\    Y    /  |  // __ \_|        \   |  \   /   #
#   \__/\  / |__||__| |___|  /\____ |\___  >\/\_/  \___|_  /|____/(____  /_______  /___|  /\_/    #
#        \/                \/      \/    \/              \/            \/        \/     \/        #
#                                                                                                 #
# =============================================================================================== #


# path env functions
source ~/.shell_config/exports.sh

# pyenv
[ -d "$HOME/.pyenv" ] && source ~/.tools/pyenv.sh

# poetry
[ -d "$HOME/.poetry" ] && source ~/.tools/poetry.sh

# thefuck
type thefuck > /dev/null 2>&1 && eval $(thefuck --alias)

# brew
if [ "$(uname)" = "Darwin" ]; then
    pathprepend "/opt/homebrew/bin"
    # > python-build
    BREW_PREFIX=$(brew --prefix)
    export CFLAGS="-I${BREW_PREFIX}/opt/zlib/include -I${BREW_PREFIX}/opt/sqlite/include -I${BREW_PREFIX}/opt/bzip2/include -I${BREW_PREFIX}/opt/openssl/include -I${BREW_PREFIX}/opt/readline/include -I$(xcrun --show-sdk-path)/usr/include"
    export LDFLAGS="-L${BREW_PREFIX}/opt/openssl/lib -L${BREW_PREFIX}/opt/readline/lib -L${BREW_PREFIX}/opt/bzip2/lib -L${BREW_PREFIX}/opt/zlib/lib -L${BREW_PREFIX}/opt/sqlite/lib"
elif [ "$(uname)" = "Linux" ]; then
    HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
    [ -d ${HOMEBREW_PREFIX} ] && eval $(${HOMEBREW_PREFIX}/bin/brew shellenv)
fi

# fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# remove duplicate path
normalize_path
